File permissions in Linux
Project description
As a security professional, part of my job is to ensure that users on my team are authorized with the appropriate 
permission. For this reason, in this project I must check the permissions for all files in the directory, including 
any hidden files, to make sure that permissions align with the authorization that should be given. If they do not 
match, I’ll need to modify the permissions to authorize the appropriate users and remove any unauthorized access.
To complete this task, I performed the following tasks:
Check file and directory details
In this task, I must explore the permissions of the projects directory and the files it contains. 
/home/researcher2 is the current working directory. Then, I navigate to the projects directory (the command to 
complete this step is: cd projects) and list the contents and permissions of the projects directory.
I used ls -la command to list the permissions to files and directories, including hidden files.
Describe the permissions string
In the /home/researcher2/projects directory, there are five files. One of these, is the document called 
“project_k.txt”.
The permissions for this file are:
-	User: read, write;
-	Group: read, write;
-	Other: read, write.
Change file permissions
The organization does not allow others to have write access to any files. So, I’ll remove unauthorized access and 
strengthen security on the system.
First, I check whether any files in the projects directory have write permissions for the owner type of other.
The command to complete this step is: ls -l
The project_k.txt file has write permissions for other users.
I change the permissions of the file identified in the previous step so that the owner type of other doesn’t have 
write permissions.
The command is: chmod o-w project_k.txt

Chmod command changes permissions on files and directories. You need to identify which file or directory you want to 
adjust permissions for. The first argument, added directly after the chmod command, indicates how to change 
permissions. There are three types of owners: user, group and other. To identify these with chmod, we use letters u 
(to represent the user), g (to represent the group) and o (to represent other). The plus sign means we want to add 
permissions instead the minus sign means we want to take them away permission from others.
Change file permissions on a hidden file
The file .project_x.txt is a hidden file that has been archived and should not be written to by anyone. The user and 
group should be able to read this file.
To list the contents and permissions of the current directory and check if the group has read or write permissions, 
I’ll use the command: ls -la
Then, I’ll change the permissions of the file .project_x.txt so that both the user and the group can read, but not 
write to, the file.

The ls -la command displays permissions to files and directories, including hidden files.

Change directory permissions
The files and directories in the projects directory belong to the researcher2 user. Only researcher2 user should be 
allowed to access the drafts directory and its contents. 
So, I’ll use a Linux command to modify the permissions accordingly.
First, I’ll check the permissions of the drafts directory. I’ll use the command: ls -l
The group has execute permissions and therefore has access to the drafts directory.
I’ll remove the execute permission for the group from the drafts directory.
The command to complete this step is: chmod g-x drafts

Hidden files and directories are special files and folders that are not normally visible when listing the contents of 
a directory using standard commands. They are commonly used for configuration files and directories that should not be 
tampered with by regular users.

